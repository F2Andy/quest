<?xml version="1.0"?>
<library>


  <!-- =================================================== -->
  <!-- Functions -->

  <!--
  Handles at attack on monster, using the given spell.
  Monster loses hit points according to the spell's powerrating.
  If they share an element, then the damage is multplied by 4
  -->
  <function name="SpellAttackMonster" parameters="monster, spell"><![CDATA[
    if (HasCommonElement (monster, spell)) {
      monster.hitpoints = monster.hitpoints -  4 * spell.powerrating
      if (monster.hitpoints > 0) {
        msg ("... " + monster.hurtbyelement)
      }
      else {
        msg ("... " + monster.deathbyelement)
      }
    }
    else {
      monster.hitpoints = monster.hitpoints -  spell.powerrating
      if (monster.hitpoints > 0) {
        msg ("... " + monster.hurt)
      }
      else {
        msg ("... " + monster.death)
      }
    }
  ]]></function>


  <!--
  Returns true if the two objects have the same type, using the types listed in 
  element_struct.elements only.
  -->
  <function name="HasCommonElement" parameters="obj1, obj2" type="boolean"><![CDATA[
    flag = False
    foreach (element, element_struct.elements) {
     type = element + "_type"
      if (DoesInherit (obj1, type) and DoesInherit (obj2, type)) {
        flag = True
      }
    }
    return (flag)
  ]]></function>


  <!-- =================================================== -->
  <!-- Object types -->

  <type name="spell">
    <inventoryverbs type="list">Learn</inventoryverbs>
    <displayverbs type="list">Learn</displayverbs>
    <drop type="boolean">false</drop>
    <take type="boolean">false</take>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <learn type="script"><![CDATA[
      if (not this.parent = player) {
        this.parent = player
        this.inventoryverbs = Split ("Cast", " ")
        msg ("In a process that seems at once unfathomable, and yet familiar, the spell fades away, and you realise you are now able to cast the <i>" + this.alias + "</i> spell.")
      }
      else {
        msg ("Er, you already know that one!")
      }
    ]]></learn>
  </type>

  <type name="attackspell">
    <inherit name="spell"/>
    <cast type="script"><![CDATA[
      if (this.parent = player) {
        this.parent = player
        msg (this.description)
        flag = False
        foreach (obj, ScopeVisibleNotHeld ()) {
          if (DoesInherit (obj, "monster")) {
            SpellAttackMonster (obj, this)
            flag = True
          }
        }
        if (not flag) {
          msg ("... No monsters present")
        }
      }
      else {
        msg ("Er, you don't know that one!")
      }
    ]]></cast>
  </type>


  <type name="fire_type">
  </type>

  <type name="frost_type">
  </type>

  <type name="storm_type">
  </type>

  <type name="monster">
  </type>


  <!-- =================================================== -->
  <!-- Data -->

  <!--
  This is a data store for elements (I call it a "struct" after the keyword in the C programming language)
  If you add more elements to the name, you need to add them to this list as well as creating a new type.
  Note that your new type must end "_type"
  -->
  <object name="element_struct">
    <elements type="list">fire; frost; storm</elements>
  </object>


  <!-- =================================================== -->
  <!-- Tabs -->

  <tab>
    <parent>_ObjectEditor</parent>
    <caption>Magic</caption>
    <mustnotinherit>editor_room; defaultplayer</mustnotinherit>

    <control>
      <controltype>dropdowntypes</controltype>
      <caption>Spell type</caption>
      <types>*=None; spell=Non-attack spell; attackspell=Attack spell; monster=Monster</types>
      <width>150</width>
    </control>

    <control>
      <controltype>title</controltype>
      <caption>Attack Spell</caption>
      <mustinherit>attackspell</mustinherit>
    </control>

    <control>
      <controltype>number</controltype>
      <caption>Power of attack (1-10)</caption>
      <attribute>powerrating</attribute>
      <width>100</width>
      <mustinherit>attackspell</mustinherit>
      <minimum>0</minimum>
      <maximum>10</maximum>
    </control>

    <control>
      <controltype>textbox</controltype>
      <caption>Description</caption>
      <attribute>description</attribute>
      <mustinherit>attackspell</mustinherit>
    </control>

    <control>
      <controltype>dropdowntypes</controltype>
      <caption>Element</caption>
      <types>*=None; fire_type=Fire; frost_type=Frost; storm_type=Storm</types>
      <width>150</width>
      <mustinherit>attackspell</mustinherit>
    </control>

    <control>
      <controltype>title</controltype>
      <caption>Monster</caption>
      <mustinherit>monster</mustinherit>
    </control>

    <control>
      <controltype>number</controltype>
      <caption>Hit points</caption>
      <attribute>hitpoints</attribute>
      <width>100</width>
      <mustinherit>monster</mustinherit>
      <minimum>0</minimum>
    </control>

    <control>
      <controltype>textbox</controltype>
      <caption>Description on injury</caption>
      <attribute>hurt</attribute>
      <mustinherit>monster</mustinherit>
    </control>

    <control>
      <controltype>textbox</controltype>
      <caption>Description on death</caption>
      <attribute>death</attribute>
      <mustinherit>monster</mustinherit>
    </control>

    <control>
      <controltype>textbox</controltype>
      <caption>Description on injury</caption>
      <attribute>hurtbyelement</attribute>
      <mustinherit>monster</mustinherit>
    </control>

    <control>
      <controltype>textbox</controltype>
      <caption>Description on death</caption>
      <attribute>deathbyelement</attribute>
      <mustinherit>monster</mustinherit>
    </control>

    <control>
      <controltype>dropdowntypes</controltype>
      <caption>Vulnerable to element</caption>
      <types>*=None; fire_type=Fire; frost_type=Frost; storm_type=Storm</types>
      <width>150</width>
      <mustinherit>monster</mustinherit>
    </control>
  </tab>
</library>
