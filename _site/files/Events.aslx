<!--Saved by Quest 5.4.4873.16527-->
<asl version="540">
  <include ref="English.aslx" />
  <include ref="Core.aslx" />
  <dynamictemplate name="ObjectNotOpen">DoObjectNotOpen (object)</dynamictemplate>
  <game name="events">
    <gameid>17fa10af-9205-4eba-a5ad-65d3166864e7</gameid>
    <version>1.0</version>
    <firstpublished>2013</firstpublished>
    <turn type="int">0</turn>
    <statusattributes type="stringdictionary">
      <item>
        <key>turn</key>
        <value></value>
      </item>
    </statusattributes>
    <subtitle>A demonstration of simple turn-based events</subtitle>
    <author>The Pixie</author>
  </game>
  <object name="room">
    <inherit name="editor_room" />
    <alias>First Room</alias>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <object name="player">
      <inherit name="editor_object" />
      <inherit name="editor_player" />
    </object>
    <exit alias="west" to="room2">
      <inherit name="westdirection" />
    </exit>
  </object>
  <object name="room2">
    <inherit name="editor_room" />
    <alias>Second Room</alias>
    <usedefaultprefix type="boolean">false</usedefaultprefix>
    <exit alias="east" to="room">
      <inherit name="eastdirection" />
    </exit>
  </object>
  <object name="active_events">
    <inherit name="editor_room" />
    <object name="event1">
      <inherit name="editor_object" />
      <inherit name="event_type" />
      <turn type="int">3</turn>
      <nextturn type="int">2</nextturn>
      <next type="object">event2</next>
      <action type="script">
        msg ("Event 1")
      </action>
    </object>
  </object>
  <turnscript name="eventhandler">
    <enabled />
    <script><![CDATA[
      game.turn = game.turn + 1
      foreach (evt, GetDirectChildren (active_events)) {
        if (evt.turn <= game.turn) {
          do (evt, "action")
          if (evt.auto) {
            evt.parent = dead_events
            if (HasAttribute (evt, "next")) {
              evt.next.turn = evt.nextturn + game.turn
              evt.next.parent = active_events
            }
          }
        }
      }
    ]]></script>
  </turnscript>
  <object name="dead_events">
    <inherit name="editor_room" />
    <object name="event2">
      <inherit name="editor_object" />
      <inherit name="event_type" />
      <auto type="boolean">false</auto>
      <action type="script">
        if (player.parent = room2) {
          msg ("Event 2")
          event3.turn = 2 + game.turn
          event3.parent = active_events
          this.parent = dead_events
        }
        else {
          msg ("... waiting")
        }
      </action>
    </object>
    <object name="event3">
      <inherit name="editor_object" />
      <inherit name="event_type" />
      <action type="script">
        msg ("Event 3")
      </action>
    </object>
  </object>
  <type name="event_type">
    <done type="boolean">false</done>
    <auto />
    <turn type="int">-1</turn>
    <action type="script">
      msg ("TODO")
    </action>
  </type>
</asl>